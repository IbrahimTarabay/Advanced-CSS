@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1.5rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1.5rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateX(3rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
  /*good practice*/ }

html {
  font-size: 62.5%;
  /*62.5% of 16px(default browser) = 10px, we didn't write 10px to 
  make user have choice to change font-size from setting of browser*/
  /*we make font-size: 10px so 1 rem = 10px*/ }

body {
  box-sizing: border-box;
  /*Defines how the width and height of an element are calculated:
   should they include padding and borders, or not, we inherit it
   from *{} so we have margin:0 and padding:0*/ }

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /*font-size: 16px;*/
  line-height: 1.7;
  color: #777;
  padding: 3rem;
  /*padding here not inherited all we do is padding entire body*/ }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden;
  /*to fix shaky animation*/
  margin-bottom: 6rem; }
  .heading-primary--main {
    display: block;
    /*gives line breaks before and after it*/
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 1.5s;
    animation-timing-function: ease-out;
    /*start fast then slow*/
    /*
       animation-delay: 3s;
       animation-iteration-count: 3;
      */ }
  .heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.7rem;
    animation: moveInRight 1.5s ease-out; }

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;
  /*to make background color only on text*/
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  background-clip: initial;
  -webkit-background-clip: text;
  /*to fit text with background color*/
  color: transparent;
  letter-spacing: .2rem;
  transition: all .2s; }
  .heading-secondary:hover {
    transform: skewY(2deg) skewX(15deg) scale(1.1);
    text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2);
    /*x y blur color(color,opacity)*/ }

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase; }

.paragraph {
  font-size: 1.6rem; }
  .paragraph:not(:last-child) {
    margin-bottom: 3rem; }

.u-center-text {
  text-align: center; }

.u-margin-bottom-small {
  margin-bottom: 1.5rem; }

.u-margin-bottom-medium {
  margin-bottom: 4rem; }

.u-margin-bottom-big {
  margin-bottom: 8rem; }

.u-margin-top-big {
  margin-top: 8rem; }

.u-margin-top-huge {
  margin-top: 10rem; }

.btn:link, .btn:visited {
  /*to make the sytles the same even after visited*/
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  /*to give some paddings or some height to element not line break*/
  border-radius: 10rem;
  transition: all .2s;
  position: relative;
  /*reference*/
  font-size: 1.6rem; }

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }
  .btn:hover::after {
    transform: scaleX(1.2) scaleY(1.4);
    /*to increase the size of element*/
    /*we put transition in initial state btn::after not here*/
    opacity: 0; }

.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2); }

.btn--white {
  background-color: #fff;
  color: #777; }
  .btn--white::after {
    /*background-color:red;*/
    background-color: #fff; }

.btn--green {
  background-color: #55c57a;
  color: #fff; }
  .btn--green::after {
    /*background-color:red;*/
    background-color: #55c57a; }

.btn::after {
  content: "";
  /*necessary to put in pesudo element*/
  display: inline-block;
  height: 100%;
  width: 100%;
  /*we make height and width 100% because pesudo element consider child of btn*/
  border-radius: 10rem;
  position: absolute;
  /*need to have reference*/
  top: 0;
  left: 0;
  z-index: -1;
  /*defines the position of the elements if they are one on top of another*/
  transition: all .4s; }

.btn--animated {
  animation: moveInBottom .5s ease-out .4s;
  /*last seconds is delay*/
  animation-fill-mode: backwards;
  /*be in 0% moveInBottom before it started*/ }

.btn-text:link, .btn-text:visited {
  font-size: 1.6rem;
  color: #55c57a;
  display: inline-block;
  text-decoration: none;
  border-bottom: 1px solid #55c57a;
  padding: 3px;
  transition: all .3s; }

.btn-text:hover {
  background-color: #55c57a;
  color: #fff;
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
  transform: translateY(-2px); }

.btn-text:active {
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
  transform: translateY(0px); }

.card {
  perspective: 150rem;
  -moz-perspective: 150rem;
  position: relative;
  height: 52rem;
  /*when we use position absolute in &__side the height
  collapsed to 0 so we have to rewrite it here again*/ }
  .card__side {
    height: 52rem;
    transition: all 1s ease;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    backface-visibility: hidden;
    /*it basically hides the back part of element*/
    border-radius: 10px;
    overflow: hidden;
    /*to prevent image to overflow on corners*/
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15); }
    .card__side--front {
      background-color: #fff; }
    .card__side--back {
      transform: rotateY(180deg); }
      .card__side--back-1 {
        background-image: linear-gradient(to right bottom, #ffb900, #ff7730); }
      .card__side--back-2 {
        background-image: linear-gradient(to right bottom, #7ed56f, #28b485); }
      .card__side--back-3 {
        background-image: linear-gradient(to right bottom, #2998ff, #5643fa); }
  .card:hover .card__side--front {
    transform: rotateY(-180deg); }
  .card:hover .card__side--back {
    transform: rotateY(0); }
  .card__picture {
    background-size: cover;
    height: 23rem;
    background-blend-mode: hue;
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    /*if clip-path affect on overflow:hidden then use
    border-top-left-radius: 10px;
    border-top-right-radius: 10px;
    */ }
    .card__picture--1 {
      background-image: linear-gradient(to right bottom, #ffb900, #ff7730), url(../img/nat-5.jpg); }
    .card__picture--2 {
      background-image: linear-gradient(to right bottom, #7ed56f, #28b485), url(../img/nat-6.jpg); }
    .card__picture--3 {
      background-image: linear-gradient(to right bottom, #2998ff, #5643fa), url(../img/nat-7.jpg); }
  .card__heading {
    font-size: 2.8rem;
    font-weight: 300;
    text-transform: uppercase;
    text-align: right;
    color: #fff;
    position: absolute;
    top: 12rem;
    right: 2rem;
    width: 75%; }
  .card__heading-span {
    padding: .8rem;
    -webkit-box-decoration-break: clone;
    box-decoration-break: clone;
    /*to treat THE SEA, EXPLORER as different elements*/ }
    .card__heading-span--1 {
      background-image: linear-gradient(to right bottom, rgba(255, 185, 0, 0.85), rgba(255, 119, 48, 0.85)); }
    .card__heading-span--2 {
      background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.85), rgba(40, 180, 133, 0.85)); }
    .card__heading-span--3 {
      background-image: linear-gradient(to right bottom, rgba(41, 152, 255, 0.85), rgba(86, 67, 250, 0.85)); }
  .card__details {
    padding: 3rem; }
    .card__details ul {
      list-style: none;
      width: 80%;
      margin: auto; }
      .card__details ul li {
        text-align: center;
        font-size: 1.5rem;
        padding: 1rem; }
        .card__details ul li:not(:last-child) {
          border-bottom: 1px solid #eee; }
  .card__cta {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 90%;
    text-align: center; }
  .card__price-box {
    text-align: center;
    color: #fff;
    margin-bottom: 8rem; }
  .card__price-only {
    font-size: 1.4rem;
    text-transform: uppercase; }
  .card__price-value {
    font-size: 6rem;
    font-weight: 100; }

.composition {
  position: relative; }
  .composition__photo {
    width: 55%;
    box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
    border-radius: 2px;
    position: absolute;
    z-index: 1;
    /*it doesn't matter which number you write*/
    transition: all .2s;
    outline-offset: 1rem; }
    .composition__photo--p1 {
      left: 0;
      top: -2rem;
      /*top left corner of parent element*/ }
    .composition__photo--p2 {
      right: 0;
      top: 2rem; }
    .composition__photo--p3 {
      left: 20%;
      top: 10rem; }
    .composition__photo:hover {
      outline: 0.8rem solid #55c57a;
      /*to make the border*/
      transform: scale(1.05) translateY(-1rem);
      box-shadow: 0 2.5rem 4rem rgba(0, 0, 0, 0.5);
      z-index: 2; }
  .composition:hover .composition__photo:not(:hover) {
    transform: scale(0.95); }

.feature-box {
  background-color: rgba(255, 255, 255, 0.8);
  font-size: 1.5rem;
  padding: 2.5rem;
  text-align: center;
  border-radius: 3px;
  box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  transition: transform .3s; }
  .feature-box__icon {
    font-size: 6rem;
    margin-bottom: .5rem;
    display: inline-block;
    /*to make background color only on text*/
    background-image: linear-gradient(to right, #7ed56f, #28b485);
    background-clip: initial;
    -webkit-background-clip: text;
    /*to fit text with background color,
   remember icon font is text*/
    color: transparent; }
  .feature-box:hover {
    transform: translateY(-1.5rem) scale(1.1); }

.story {
  width: 75%;
  margin: 0 auto;
  box-shadow: 0 3rem 6rem rgba(0, 0, 0, 0.1);
  background-color: #fff;
  border-radius: 3px;
  padding: 6rem;
  padding-left: 9rem;
  font-size: 1.6rem;
  transform: skewX(-12deg);
  /*& > * {
    transform: skewX(12deg);
  } it won't work you should put it in child by child*/ }
  .story__shape {
    width: 15rem;
    height: 15rem;
    float: left;
    -webkit-shape-outside: circle(50% at 50% 50%);
    shape-outside: circle(50% at 50% 50%);
    /*circle(radius at width height) = circle(7.5rem at 7.5rem 7.5rem) this doesn't make
    a circle we just make text wrapping like there is a circle*/
    -webkit-clip-path: circle(50% at 50% 50%);
    clip-path: circle(50% at 50% 50%);
    /*it's make an actual circle*/
    transform: translateX(-3rem) skewX(12deg);
    /*the best way to deal with element floating is just use a transform*/
    position: relative; }
  .story__img {
    height: 100%;
    /*to fill all the circle shape*/
    transform: translateX(-4rem) scale(1.4);
    /*to prevent cutting img problem*/
    transition: all .5s; }
  .story__text {
    transform: skewX(12deg); }
  .story__caption {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, 20%);
    /*top,left,transform to center the center of element with the center with parent*/
    color: #fff;
    text-transform: uppercase;
    font-size: 1.7rem;
    text-align: center;
    opacity: 0;
    transition: all .5s;
    backface-visibility: hidden;
    /*to fix shacking when hover*/ }
  .story:hover .story__caption {
    opacity: 1;
    transform: translate(-50%, -50%); }
  .story:hover .story__img {
    transform: translateX(-4rem) scale(1);
    filter: blur(3px) brightness(80%);
    backface-visibility: hidden; }

.row {
  max-width: 114rem;
  /*background-color: #eee;*/
  margin: 0 auto; }
  .row:not(:last-child) {
    margin-bottom: 8rem; }
  .row::after {
    content: "";
    display: table;
    clear: both; }
  .row [class^="col-"] {
    /*background-color: orangered;*/
    float: left; }
    .row [class^="col-"]:not(:last-child) {
      margin-right: 6rem; }
  .row .col-1-of-2 {
    width: calc((100% - 6rem)/2); }
  .row .col-1-of-3 {
    width: calc((100% - 2 * 6rem)/3); }
  .row .col-2-of-3 {
    width: calc(2*((100% - 2 * 6rem)/3) + 6rem); }
  .row .col-1-of-4 {
    width: calc((100% - 3 * 6rem)/4); }
  .row .col-2-of-4 {
    width: calc(2 * ((100% - 3 * 6rem) / 4) + 6rem); }
  .row .col-3-of-4 {
    width: calc(3 * ((100% - 3 * 6rem) / 4) + 2 * 6rem); }

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.6), rgba(40, 180, 133, 0.6)), url(../img/hero.jpg);
  /*two background image and linear-gradient*/
  background-size: cover;
  /*to make background image full view*/
  background-position: top;
  /*to fix the top view when the screen change*/
  position: relative;
  /*to make text-box and logo-box relative to header, it's a reference*/
  -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  /*x-y on each corner*/ }
  .header__logo-box {
    position: absolute;
    /*need a reference*/
    /*with absolute psoitioning, an element can be
      placed anywhere on a page*/
    top: 4rem;
    left: 4rem; }
  .header__logo {
    height: 3.5rem;
    /*width automaticaly figured out from the browser*/ }
  .header__text-box {
    position: absolute;
    /*need a reference*/
    top: 40%;
    left: 50%;
    /*top and left in relation to the parent*/
    transform: translate(-50%, -50%);
    /*transform in relation to the element itself*/
    /*to translate the origin point of x-y axis of the box*/
    text-align: center;
    /*background-color: red;*/ }

.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -20vh;
  /*height: 95vh - 75vh polygon*/ }

.section-features {
  padding: 20rem 0;
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/nat-4.jpg);
  background-size: cover;
  margin-top: -10rem;
  /*we won't use the clip-path property, we simply skew the entire section*/
  transform: skewY(-7deg);
  /*select direct child, .section-features > * */ }
  .section-features > * {
    transform: skewY(7deg); }

.section-tours {
  background-color: #f7f7f7;
  padding: 25rem 0 15rem 0;
  /*top right bottom left*/
  margin-top: -10rem; }

.section-stories {
  padding: 15rem 0;
  background-color: #f7f7f7; }
