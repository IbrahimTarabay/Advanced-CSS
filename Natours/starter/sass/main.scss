$color-primary: #55c57a;
$color-primary-light: #7ed56f;
$color-primary-dark: #28b485;

$color-grey-dark: #777;
$color-white: #fff;
$color-black: #000;

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
  /*good practice*/
}

html {
  font-size: 62.5%;
  /*62.5% of 16px(default browser) = 10px, we didn't write 10px to 
  make user have choice to change font-size from setting of browser*/
  /*we make font-size: 10px so 1 rem = 10px*/
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /*font-size: 16px;*/
  line-height: 1.7;
  color:$color-grey-dark;
  padding: 3rem;
  /*padding here not inherited all we do is padding entire body*/
  box-sizing: border-box;
  /*Defines how the width and height of an element are calculated:
   should they include padding and borders, or not, we inherit it
   from *{} so we have margin:0 and padding:0*/
}

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom,
   rgba($color-primary-light,0.6),
   rgba($color-primary-dark,0.6)),
    url(../img/hero.jpg);
  /*two background image and linear-gradient*/
  background-size: cover;/*to make background image full view*/
  background-position: top;/*to fix the top view when the screen change*/
  position: relative;/*to make text-box and logo-box relative to header, it's a reference*/

  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);

  &__logo-box{
    position: absolute;/*need a reference*/
    /*with absolute psoitioning, an element can be
    placed anywhere on a page*/
    top: 4rem;
    left: 4rem;
  }

  &__logo {
    height: 3.5rem;
    /*width automaticaly figured out from the browser*/
  }
  
  &__text-box {
    position: absolute;/*need a reference*/
    top: 40%;
    left: 50%;
    /*top and left in relation to the parent*/
    transform: translate(-50%,-50%);
    /*transform in relation to the element itself*/
    /*to translate the origin point of x-y axis of the box*/
    text-align: center;
    /*background-color: red;*/
  }
}



.heading-primary {
  color: $color-white;
  text-transform: uppercase;
  backface-visibility: hidden;/*to fix shaky animation*/
  margin-bottom: 6rem;

  &--main {
    display: block;/*gives line breaks before and after it*/
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
  
    animation-name: moveInLeft;
    animation-duration: 1.5s;
    animation-timing-function: ease-out;/*start fast then slow*/
    /*
     animation-delay: 3s;
     animation-iteration-count: 3;
    */
  }
  
  &--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.7rem;
    animation: moveInRight 1.5s ease-out;
  }
}



@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem);
  }

  80% {
    transform: translateX(1.5rem);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInRight {
    0% {
      opacity: 0;
      transform: translateX(10rem);
    }
  
    80% {
      transform: translateX(-1.5rem);
    }
  
    100% {
      opacity: 1;
      transform: translate(0);
    }
  }

  @keyframes moveInBottom {
    0% {
      opacity: 0;
      transform: translateX(3rem);
    }
  
    100% {
      opacity: 1;
      transform: translate(0);
    }
  }

.btn {
  &:link,
  &:visited {/*to make the sytles the same even after visited*/
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;/*to give some paddings or some height to element not line break*/
    border-radius: 10rem;
    transition: all .2s;
    position: relative;/*reference*/
    font-size: 1.2rem;
  }

  &:hover {
    transform: translateY(-3px);
    box-shadow: 0 1rem 2rem rgba($color-black,.2);

    &::after {
      transform: scaleX(1.2) scaleY(1.4);
      /*to increase the size of element*/
      /*we put transition in initial state btn::after not here*/
      opacity: 0;
    }
  }

  &:active {
    transform: translateY(-1px);
    box-shadow: 0 .5rem 1rem rgba($color-black,.2);
  }

  &--white {
    background-color: $color-white;
    color: $color-grey-dark;

    &::after {
      /*background-color:red;*/
      background-color: $color-white;
    }
  }

  &::after {
    content: "";/*necessary to put in pesudo element*/
    display: inline-block;
    height: 100%;
    width: 100%;
    /*we make height and width 100% because pesudo element consider child of btn*/
    border-radius: 10rem;
    position: absolute;/*need to have reference*/
    top: 0;
    left: 0;
    z-index: -1;/*defines the position of the elements if they are one on top of another*/
    transition: all .4s;
  }

  &--animated {
    animation: moveInBottom .5s ease-out .4s;/*last seconds is delay*/
    animation-fill-mode: backwards;/*be in 0% moveInBottom before it started*/
   }  
  }